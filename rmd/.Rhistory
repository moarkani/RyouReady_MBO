getwd()
setwd("~/Dropbox/LUMC/RyouReady_MBO/rmd2")
knit_with_parameters("~/Dropbox/LUMC/RyouReady_MBO/rmd2/Day1_Assignments.Rmd")
unlink("Day1_Assignments_cache", recursive = TRUE)
getwd()
dna <- "ACTG"
dna
dna <- str_replace_all(dna, c("A" = "t", "C" ="g", "G"= "c", "T"= "a"))
library(stringr)
dna <- "ACTG"
dna
dna <- str_replace_all(dna, c("A" = "t", "C" ="g", "G"= "c", "T"= "a"))
toupper(dna)
str_rev(dna)
library(stringr)
version
str_rev(dna)
getwd()
DNA <- "ACTGATCGATTACGTATAGTAGAATTCTATCATACATTCGATGCGTTCATACTGATCGATTACGTATAGTAGAATTCTATCATACATATATATCGATGCGTTCAT"
str_count(DNA, "GAATTC")
str_split(DNA, "GAATTC")[[1]][1]
FirstSeq <- str_length(str_split(DNA, "GAATTC")[[1]][1])+1
FirstSeq
str_split(DNA, "GAATTC")[[1]][2]
SecondSeq<- str_length(str_split(DNA, "GAATTC")[[1]][2]) + 6
SecondSeq
str_split(DNA, "GAATTC")[[1]][3]
ThirdSeq <- str_length(str_split(DNA, "GAATTC")[[1]][3]) + 5
ThirdSeq
DNA<- "ACTGATCGATTACGTATAGTATTTGCTATCATACATATATATCGATGCGTTCAT"
A <- str_sub(DNA, 9, 15)
B <- str_sub(DNA, 22, 30)
A
B
str_c(A, B)
DNA<- "ACTGATCGATTACGTATAGTATTTGCTATCATACATATATATCGATGCGTTCAT"
A <- str_sub(DNA, 9, 15)
B <- str_sub(DNA, 22, 30)
A
B
str_c(A, B)
my_dna <- c("ACTGATCGATTACGTATAGTAGAATTCTATCATACATATATATCGATGCGTTCAT",
"ACTTGAATTCTTCAGCTGAGATTCGG",
"ATCGGGTTAATACGTGAATTCAGGCTGATCGTGTAGCTTGGATCC")
str_count(my_dna, "GAATTC") #Count number of RE in each string
#Split each DNA string
str_split(my_dna, "GAATTC")
##First DNA
#Split + count the 1st lenght in 1st DNA
FirstStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[1]][1])+1
FirstStr_1stDNA
#Split + count the 2nd lenght in 1st DNA
ScondStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[1]][2]) + 6
ScondStr_1stDNA
##Second DNA
#Split + count the 1st lenght in 2nd DNA
FirstStr_2ndDNA <- str_length(str_split(my_dna, "GAATTC")[[2]][1])+1
FirstStr_2ndDNA
#Split + count the 2nd lenght in 2nd DNA
ScondStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[2]][2]) + 5
ScondStr_1stDNA
##Third DNA
#Split + count the 1st lenght in 3rd DNA
FirstStr_3rdDNA <- str_length(str_split(my_dna, "GAATTC")[[3]][1])+1
FirstStr_3rdDNA
#Split + count the 2nd lenght in 3rd DNA
ScondStr_3rdDNA <- str_length(str_split(my_dna, "GAATTC")[[3]][2]) + 5
ScondStr_3rdDNA
my_dna <- c("ACTGATCGATTACGTATAGTAGAATTCTATCATACATATATATCGATGCGTTCAT",
"ACTTGAATTCTTCAGCTGAGATTCGG",
"ATCGGGTTAATACGTGAATTCAGGCTGATCGTGTAGCTTGGATCC")
str_count(my_dna, "GAATTC") #Count number of RE in each string
#Split each DNA string
str_split(my_dna, "GAATTC")
##First DNA
#Split + count the 1st lenght in 1st DNA
FirstStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[1]][1])+1
FirstStr_1stDNA
#Split + count the 2nd lenght in 1st DNA
ScondStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[1]][2]) + 6
ScondStr_1stDNA
##Second DNA
#Split + count the 1st lenght in 2nd DNA
FirstStr_2ndDNA <- str_length(str_split(my_dna, "GAATTC")[[2]][1])+1
FirstStr_2ndDNA
#Split + count the 2nd lenght in 2nd DNA
ScondStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[2]][2]) + 5
ScondStr_1stDNA
##Third DNA
#Split + count the 1st lenght in 3rd DNA
FirstStr_3rdDNA <- str_length(str_split(my_dna, "GAATTC")[[3]][1])+1
FirstStr_3rdDNA
#Split + count the 2nd lenght in 3rd DNA
ScondStr_3rdDNA <- str_length(str_split(my_dna, "GAATTC")[[3]][2]) + 5
ScondStr_3rdDNA
FirstStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[1]][1])+1
FirstStr_1stDNA
ScondStr_1stDNA <- str_length(str_split(my_dna, "GAATTC")[[1]][2]) + 6
ScondStr_1stDNA
str_split(my_dna, "GAATTC")
my_dna <-"ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATCGATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"
total_length<- str_length(my_dna)
total_length
exon1 <- str_sub(my_dna, 1, 63)
intron <- str_sub(my_dna, 64,90)
exon2 <- str_sub(my_dna, 91, 123)
str_c(exon1,tolower(intron) ,exon2, sep= "")
my_dna <-"AACTTACTTCCTAGGATGCTGATGCAGGTTCACATGCTGAAACTCCGGATAGGATGGACTATGGCTAGATATATAGCTAGCTAGCTAGGATTATATAGCTAGCTAGCTGACTAGCTAGAGATGGATC"
my_dna <- str_replace_all(my_dna, c("A" = "t", "C" ="g", "G"= "c", "T"= "a"))
toupper(my_dna)
DNA_complement <- toupper(my_dna)
C_Counts <- str_count(DNA_complement, "C")
G_Counts <- str_count(DNA_complement, "G")
total <- str_length(DNA_complement)
str_c("Number of C in this DNA is", C_Counts)
str_c("Number of G in this DNA is", G_Counts)
# calculating the ratio of C and G in this DNA seq
(C_Counts + G_Counts)/total *100
RNA <- str_replace_all(DNA_complement, c("A" = "u", "C" ="g", "G"= "c", "T"= "a"))
toupper(RNA)
RNA <- toupper(RNA)
RNA_count<- str_length(RNA)
RNA_count
exon1 <- substr(RNA, start = 1, stop =  40)
exon2 <- substr(RNA, start = 89,stop = 127)
str_c(exon1, exon2, sep= "")
Spliced_RNA <- str_c(exon1, exon2, sep= "")
str_length(Spliced_RNA)
coding_length_exon1 <- str_length(exon1)
coding_length_exon2 <- str_length(exon2)
coding_length <- coding_length_exon1 + coding_length_exon2
coding_length
total_length<- str_length(RNA)
total_length
print(coding_length/total_length*100)
(str_length(Spliced_RNA)/RNA_count)*100
Length_Spliced_RNA <- str_length(Spliced_RNA)
Length_Spliced_RNA
RNA_count
print(Length_Spliced_RNA/RNA_count*100)
coding_length_exon1 <- str_length(exon1)
coding_length_exon2 <- str_length(exon2)
coding_length <- coding_length_exon1 + coding_length_exon2
coding_length
total_length<- str_length(RNA)
total_length
print(Length_Spliced_RNA/RNA_count*100)
print(Length_Spliced_RNA/RNA_count*100)
Spliced_RNA
tRNA <- str_replace_all(Spliced_RNA, c("A" = "u", "C" ="g", "G"= "c", "U"= "a"))
toupper(tRNA)
tRNA <- toupper(tRNA)
Spliced_RNA
tRNA <- str_replace_all(Spliced_RNA, c("A" = "u", "C" ="g", "G"= "c", "U"= "a"))
toupper(tRNA)
tRNA <- toupper(tRNA)
Check <- str_replace_all(tRNA, c("AUG"= "met", "UAG" = "stop"))
str_view_all(Check, c("met", "stop" ))
StartCodon <- str_replace_all(tRNA, "AUG", "met")
StartCodon
Stop_Start_codon <- str_replace_all(StartCodon, "UAG", "stop")
Stop_Start_codon
StartCodon <- str_replace_all(tRNA, "AUG", "met")
StartCodon
str_view_all(StartCodon, "met")
StopCodon <- str_replace_all(tRNA, "UAG", "STOP")
StopCodon
str_view_all(StopCodon, "STOP")
